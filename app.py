#!/usr/bin/env python3
"""
WeasyPrint Test Application
Tests WeasyPrint installation and functionality in Docker container
"""

import weasyprint
import os
import sys
from datetime import datetime


def create_test_html():
    """Create a comprehensive HTML document for testing"""
    html_template = """<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WeasyPrint Test Document</title>
    <style>
        body {{
            font-family: 'DejaVu Sans', Arial, sans-serif;
            margin: 40px;
            line-height: 1.6;
            color: #333;
        }}
        
        .header {{
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            margin-bottom: 30px;
        }}
        
        .test-section {{
            margin: 20px 0;
            padding: 15px;
            border-left: 4px solid #4CAF50;
            background-color: #f9f9f9;
        }}
        
        .status {{
            display: inline-block;
            padding: 5px 10px;
            border-radius: 4px;
            font-weight: bold;
            color: white;
        }}
        
        .success {{ background-color: #4CAF50; }}
        .info {{ background-color: #2196F3; }}
        
        table {{
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }}
        
        th, td {{
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }}
        
        th {{
            background-color: #f2f2f2;
            font-weight: bold;
        }}
        
        .footer {{
            margin-top: 40px;
            text-align: center;
            color: #666;
            border-top: 1px solid #eee;
            padding-top: 20px;
        }}
    </style>
</head>
<body>
    <div class="header">
        <h1>üöÄ WeasyPrint Test Document</h1>
        <p>Testing HTML to PDF conversion in Docker container</p>
    </div>
    
    <div class="test-section">
        <h2>Test Status</h2>
        <p><span class="status success">‚úì SUCCESS</span> WeasyPrint is working correctly!</p>
        <p><span class="status info">‚Ñπ INFO</span> Generated on: {timestamp}</p>
    </div>
    
    <div class="test-section">
        <h2>CSS Features Test</h2>
        <p>This document tests various CSS features:</p>
        <ul>
            <li>Custom fonts (DejaVu Sans)</li>
            <li>CSS gradients</li>
            <li>Border radius</li>
            <li>Box shadows and backgrounds</li>
            <li>Flexbox and grid layouts</li>
        </ul>
    </div>
    
    <div class="test-section">
        <h2>System Information</h2>
        <table>
            <tr>
                <th>Component</th>
                <th>Version/Status</th>
            </tr>
            <tr>
                <td>WeasyPrint Version</td>
                <td>{weasyprint_version}</td>
            </tr>
            <tr>
                <td>Python Version</td>
                <td>{python_version}</td>
            </tr>
            <tr>
                <td>Container OS</td>
                <td>Chainguard Python (Alpine-based)</td>
            </tr>
            <tr>
                <td>PDF Generation</td>
                <td>‚úÖ Working</td>
            </tr>
        </table>
    </div>
    
    <div class="test-section">
        <h2>Feature Tests</h2>
        <h3>Text Rendering</h3>
        <p>Regular text, <strong>bold text</strong>, <em>italic text</em>, and <code>monospace code</code>.</p>
        
        <h3>Unicode Support</h3>
        <p>Testing Unicode characters: Œ± Œ≤ Œ≥ Œ¥ Œµ ‚Ä¢ ‚òÖ ‚ô† ‚ô• ‚ô¶ ‚ô£</p>
        <p>Emoji support: üêç üê≥ üìÑ ‚ú® üéâ</p>
    </div>
    
    <div class="footer">
        <p>Generated by WeasyPrint test application</p>
        <p>If you can see this PDF, all dependencies are properly installed! üéâ</p>
    </div>
</body>
</html>"""
    
    return html_template.format(
        timestamp=datetime.now().strftime("%Y-%m-%d %H:%M:%S UTC"),
        weasyprint_version=weasyprint.__version__,
        python_version=sys.version.split()[0]
    )


def test_weasyprint():
    """Test WeasyPrint functionality"""
    print("üß™ Starting WeasyPrint tests...")
    
    try:
        # Test 1: Import and version check
        print(f"‚úÖ WeasyPrint imported successfully (version: {weasyprint.__version__})")
        
        # Test 1.5: Check system dependencies
        try:
            import cairocffi
            print(f"‚úÖ cairocffi available (version: {cairocffi.version})")
        except ImportError as e:
            print(f"‚ùå cairocffi not available: {e}")
            
        try:
            import pyphen
            print("‚úÖ pyphen available for hyphenation")
        except ImportError:
            print("‚ö†Ô∏è  pyphen not available (hyphenation disabled)")
            
        try:
            import tinycss2
            print("‚úÖ tinycss2 available for CSS parsing")
        except ImportError as e:
            print(f"‚ùå tinycss2 not available: {e}")
        
        # Test 2: Create simple HTML content first
        simple_html = "<html><body><h1>WeasyPrint Test</h1><p>This is a basic test.</p></body></html>"
        print("‚úÖ Simple HTML content generated")
        
        # Test 3: Create WeasyPrint HTML object with simple content
        try:
            simple_doc = weasyprint.HTML(string=simple_html)
            print("‚úÖ Simple WeasyPrint HTML object created")
            
            # Test basic PDF generation with detailed error info
            print("üîç Attempting to generate PDF...")
            import traceback
            try:
                simple_pdf = simple_doc.write_pdf()
                print(f"‚úÖ Simple PDF generated ({len(simple_pdf)} bytes)")
            except Exception as pdf_error:
                print(f"‚ùå PDF generation failed: {pdf_error}")
                print("Full traceback:")
                traceback.print_exc()
                raise
                
        except Exception as e:
            print(f"‚ùå Error with simple HTML: {e}")
            import traceback
            traceback.print_exc()
            raise
        
        # Test 4: Create complex HTML content
        html_content = create_test_html()
        print("‚úÖ Complex HTML content generated")
        
        # Test 5: Create WeasyPrint HTML object with complex content
        html_doc = weasyprint.HTML(string=html_content)
        print("‚úÖ Complex WeasyPrint HTML object created")
        
        # Test 6: Generate PDF in memory
        try:
            pdf_bytes = html_doc.write_pdf()
            print(f"‚úÖ PDF generated in memory ({len(pdf_bytes)} bytes)")
        except Exception as e:
            print(f"‚ùå Error generating PDF in memory: {e}")
            raise
        
        # Test 7: Write PDF to file
        output_file = "/output/weasyprint_test.pdf"
        try:
            html_doc.write_pdf(output_file)
        except Exception as e:
            print(f"‚ùå Error writing PDF to file: {e}")
            raise
        
        if os.path.exists(output_file):
            file_size = os.path.getsize(output_file)
            print(f"‚úÖ PDF written to file: {output_file} ({file_size} bytes)")
        else:
            raise Exception("PDF file was not created")
        
        # Test 8: Test with external CSS
        css_content = """
        body { background-color: #f0f8ff; }
        .highlight { background-color: yellow; padding: 10px; }
        """
        
        simple_html = "<html><body><div class='highlight'>CSS Test</div></body></html>"
        html_with_css = weasyprint.HTML(string=simple_html)
        css_doc = weasyprint.CSS(string=css_content)
        
        css_pdf = html_with_css.write_pdf(stylesheets=[css_doc])
        print(f"‚úÖ External CSS test passed ({len(css_pdf)} bytes)")
        
        print("\nüéâ All WeasyPrint tests passed successfully!")
        print(f"üìÑ Test PDF saved as: {output_file}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå Import Error: {e}")
        print("üí° Make sure WeasyPrint is installed: pip install weasyprint")
        return False
        
    except Exception as e:
        print(f"‚ùå Error during WeasyPrint test: {e}")
        print("üí° Check if all system dependencies are installed")
        return False


def main():
    """Main application entry point"""
    print("üêç WeasyPrint Test Application")
    print("=" * 50)
    
    # Display environment info
    print(f"Python version: {sys.version}")
    print(f"Working directory: {os.getcwd()}")
    print(f"Output directory exists: {os.path.exists('/output')}")
    print(f"User: {os.getenv('USER', 'unknown')}")
    print("=" * 50)
    
    # Run tests
    success = test_weasyprint()
    
    if success:
        print("\n‚ú® WeasyPrint is ready to use in this container!")
        sys.exit(0)
    else:
        print("\nüí• WeasyPrint tests failed. Check the error messages above.")
        sys.exit(1)


if __name__ == "__main__":
    main()